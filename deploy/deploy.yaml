# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
resources:
  containers:
  - container: terraform_container
    image: lenisha/terraform-light

variables:
- group: secrets

pool:
  vmImage: 'Ubuntu 16.04'

container: terraform_container

steps:

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific' # Options: current, specific
    project: 'techsummit2018' # Required when buildType == Specific
    pipeline: 'build' # Required when buildType == Specific
    downloadType: 'single' # Options: single, specific
    artifactName: 'drop' # Required when downloadType == Single
    downloadPath: '.' 

- script: |
    ls -la
  displayName: 'Display contents'
 
- script: |
    az extension add --name storage-preview
    az login --service-principal -u "$(armclientid)"  -p "$(armclientsecret)" --tenant "$(armtenantid)"
  displayName: 'Enable AZ extension and Login: "$(armclientid)"'

- script: |
    cd deploy/terraform
    terraform init -backend-config=backend.tfvars
    terraform apply -auto-approve -var dns_name="$(blobname)"
  displayName: 'Terraform init and apply'
  env:
      ARM_TENANT_ID: "$(armtenantid)"
      ARM_SUBSCRIPTION_ID: "$(armsubscriptionid)"
      ARM_CLIENT_ID: "$(armclientid)"
      ARM_CLIENT_SECRET: "$(armclientsecret)"
      ARM_ACCESS_KEY: "$(armaccesskey)"
      



- script: |
    az storage blob upload-batch -s drop -d \$web --account-name "$(blobname)"
  displayName: 'copy content and site is ready https://"$(blobname)".azureedge.net/index.html'
